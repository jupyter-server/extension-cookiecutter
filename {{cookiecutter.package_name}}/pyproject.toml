[build-system]
requires = ["hatchling>=1.5"]
build-backend = "hatchling.build"

[project]
name = "{{cookiecutter.package_name}}"
authors = [{name = "{{cookiecutter.author_name}}", email = "{{cookiecutter.author_email}}"}]
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.8"
keywords = ["Jupyter", "Extension"]
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Jupyter",
]
dependencies = ["jupyter_server>=1.6,<3"]

[project.optional-dependencies]
test = [
  "pytest>=7.0",
  "pytest-jupyter[server]>=0.6"
]
lint = [
  "black>=22.6.0",
  "mdformat>0.7",
  "mdformat-gfm>=0.3.5",
  "ruff>=0.0.156"
]
typing = ["mypy>=0.990"]

[project.license]
file="LICENSE"

[project.urls]
Home = "{{cookiecutter.repository}}"

[tool.hatch.version]
path = "{{ cookiecutter.package_name }}/__init__.py"

[tool.hatch.build.targets.wheel.shared-data]
"jupyter-config" = "etc/jupyter"

[tool.pytest.ini_options]
filterwarnings = [
  "error",
  "ignore:There is no current event loop:DeprecationWarning",
  "module:make_current is deprecated:DeprecationWarning",
  "module:clear_current is deprecated:DeprecationWarning",
  "module:Jupyter is migrating its paths to use standard platformdirs:DeprecationWarning",
]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.black]
line-length = 100
target-version = ["py37"]
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 100
select = [
  "A", "B", "C", "E", "F", "FBT", "I", "N", "Q", "RUF", "S", "T",
  "UP", "W", "YTT",
]
ignore = [
# Q000 Single quotes found but double quotes preferred
"Q000",
# FBT001 Boolean positional arg in function definition
"FBT001", "FBT002", "FBT003",
# C901 `foo` is too complex (12)
"C901",
]

[tool.ruff.per-file-ignores]
# S101 Use of `assert` detected
# F841 local variable 'foo' is assigned to but never used
"tests/*" = ["S101", "F481"]
